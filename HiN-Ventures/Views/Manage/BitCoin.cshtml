@model HiN_Ventures.Models.ManageViewModels.BitCoinViewModel

@{
    ViewData["Title"] = "BitCoin Address";
    ViewData.AddActivePage(ManageNavPages.BitCoin);
}

<h4>@ViewData["Title"]</h4>
@Html.Partial("_StatusMessage", Model.StatusMessage)

<div class="row">

    <p>You can add new bitcoin addresses to your account in the field below.</p>
    <p>* Primary value is not currently used. Thinking that the user can use whatever bitcoin address he'd like.</p>

    <div class="col-md-4">
        <form asp-action="RegisterBitcoin" asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post">

            <div asp-validation-summary="All" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="BitCoinAddress" class="control-label"></label>
                <input asp-for="BitCoinAddress" class="form-control" />
                <span asp-validation-for="BitCoinAddress" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div class="row">
    <p>All bitcoin addresses this user have stored:</p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BitCoinAddress)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RegDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Primary)
                </th>
                <th>Options</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.AllBitcoinAddresses)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RegDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Primary)
                    </td>
                    <td>
                        <a asp-action="DeleteBitcoin" asp-route-id="@item.BitCoinAddressId">Delete</a>
                    </td>

                </tr>
            }
        </tbody>
    </table>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
